<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjm.dao.MaintenanceRecordMapper">
  <resultMap id="BaseResultMap" type="com.sjm.bean.MaintenanceRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="ou_name" jdbcType="VARCHAR" property="ouName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="maintenance_time" jdbcType="TIMESTAMP" property="maintenanceTime" />
    <result column="maintenance_status" jdbcType="CHAR" property="maintenanceStatus" />
    <result column="logic_id" jdbcType="INTEGER" property="logicId" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="ou_phone" jdbcType="VARCHAR" property="ouPhone" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="maintenance_person" jdbcType="VARCHAR" property="maintenancePerson" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, device_name, ou_name, create_time, content, maintenance_time, maintenance_status, 
    logic_id, position, ou_phone, admin_name, maintenance_person
  </sql>
  <select id="selectByExample" parameterType="com.sjm.bean.MaintenanceRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from maintenance_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from maintenance_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from maintenance_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjm.bean.MaintenanceRecordExample">
    delete from maintenance_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjm.bean.MaintenanceRecord">
    insert into maintenance_record (id, device_name, ou_name, 
      create_time, content, maintenance_time, 
      maintenance_status, logic_id, position, 
      ou_phone, admin_name, maintenance_person
      )
    values (#{id,jdbcType=INTEGER}, #{deviceName,jdbcType=VARCHAR}, #{ouName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{maintenanceTime,jdbcType=TIMESTAMP}, 
      #{maintenanceStatus,jdbcType=CHAR}, #{logicId,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, 
      #{ouPhone,jdbcType=VARCHAR}, #{adminName,jdbcType=VARCHAR}, #{maintenancePerson,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sjm.bean.MaintenanceRecord">
    insert into maintenance_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceName != null">
        device_name,
      </if>
      <if test="ouName != null">
        ou_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="maintenanceTime != null">
        maintenance_time,
      </if>
      <if test="maintenanceStatus != null">
        maintenance_status,
      </if>
      <if test="logicId != null">
        logic_id,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="ouPhone != null">
        ou_phone,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="maintenancePerson != null">
        maintenance_person,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="ouName != null">
        #{ouName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceTime != null">
        #{maintenanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="maintenanceStatus != null">
        #{maintenanceStatus,jdbcType=CHAR},
      </if>
      <if test="logicId != null">
        #{logicId,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="ouPhone != null">
        #{ouPhone,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="maintenancePerson != null">
        #{maintenancePerson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjm.bean.MaintenanceRecordExample" resultType="java.lang.Long">
    select count(*) from maintenance_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByDeviceName" resultType="java.util.HashMap">
    select device_name deviceName,count(*) brokenTime from maintenance_record group by device_name
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update maintenance_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deviceName != null">
        device_name = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.ouName != null">
        ou_name = #{record.ouName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenanceTime != null">
        maintenance_time = #{record.maintenanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.maintenanceStatus != null">
        maintenance_status = #{record.maintenanceStatus,jdbcType=CHAR},
      </if>
      <if test="record.logicId != null">
        logic_id = #{record.logicId,jdbcType=INTEGER},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.ouPhone != null">
        ou_phone = #{record.ouPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.adminName != null">
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenancePerson != null">
        maintenance_person = #{record.maintenancePerson,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update maintenance_record
    set id = #{record.id,jdbcType=INTEGER},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      ou_name = #{record.ouName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR},
      maintenance_time = #{record.maintenanceTime,jdbcType=TIMESTAMP},
      maintenance_status = #{record.maintenanceStatus,jdbcType=CHAR},
      logic_id = #{record.logicId,jdbcType=INTEGER},
      position = #{record.position,jdbcType=VARCHAR},
      ou_phone = #{record.ouPhone,jdbcType=VARCHAR},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      maintenance_person = #{record.maintenancePerson,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjm.bean.MaintenanceRecord">
    update maintenance_record
    <set>
      <if test="deviceName != null">
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="ouName != null">
        ou_name = #{ouName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="maintenanceTime != null">
        maintenance_time = #{maintenanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="maintenanceStatus != null">
        maintenance_status = #{maintenanceStatus,jdbcType=CHAR},
      </if>
      <if test="logicId != null">
        logic_id = #{logicId,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="ouPhone != null">
        ou_phone = #{ouPhone,jdbcType=VARCHAR},
      </if>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="maintenancePerson != null">
        maintenance_person = #{maintenancePerson,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjm.bean.MaintenanceRecord">
    update maintenance_record
    set device_name = #{deviceName,jdbcType=VARCHAR},
      ou_name = #{ouName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      maintenance_time = #{maintenanceTime,jdbcType=TIMESTAMP},
      maintenance_status = #{maintenanceStatus,jdbcType=CHAR},
      logic_id = #{logicId,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      ou_phone = #{ouPhone,jdbcType=VARCHAR},
      admin_name = #{adminName,jdbcType=VARCHAR},
      maintenance_person = #{maintenancePerson,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>