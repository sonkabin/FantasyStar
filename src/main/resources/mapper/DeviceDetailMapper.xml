<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjm.dao.DeviceDetailMapper">
  <resultMap id="BaseResultMap" type="com.sjm.bean.DeviceDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
    <result column="logic_id" jdbcType="INTEGER" property="logicId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="apply_factory" jdbcType="VARCHAR" property="applyFactory" />
    <result column="leave_factory_no" jdbcType="VARCHAR" property="leaveFactoryNo" />
    <result column="leave_factory_date" jdbcType="DATE" property="leaveFactoryDate" />
    <result column="install_date" jdbcType="DATE" property="installDate" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="available_year" jdbcType="INTEGER" property="availableYear" />
    <result column="etc" jdbcType="VARCHAR" property="etc" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="rated_voltage" jdbcType="VARCHAR" property="ratedVoltage" />
    <result column="rated_frequency" jdbcType="VARCHAR" property="ratedFrequency" />
    <result column="rated_current" jdbcType="VARCHAR" property="ratedCurrent" />
    <result column="apply_phone" jdbcType="VARCHAR" property="applyPhone" />
    <result column="produce_contrary" jdbcType="VARCHAR" property="produceContrary" />
    <result column="easy_broken_thing" jdbcType="VARCHAR" property="easyBrokenThing" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, device_name, logic_id, type, apply_factory, leave_factory_no, leave_factory_date, 
    install_date, position, available_year, etc, start_date, rated_voltage, rated_frequency, 
    rated_current, apply_phone, produce_contrary, easy_broken_thing
  </sql>
  <select id="selectByExample" parameterType="com.sjm.bean.DeviceDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from device_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjm.bean.DeviceDetailExample">
    delete from device_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjm.bean.DeviceDetail">
    insert into device_detail (id, device_name, logic_id, 
      type, apply_factory, leave_factory_no, 
      leave_factory_date, install_date, position, 
      available_year, etc, start_date, 
      rated_voltage, rated_frequency, rated_current, 
      apply_phone, produce_contrary, easy_broken_thing
      )
    values (#{id,jdbcType=INTEGER}, #{deviceName,jdbcType=VARCHAR}, #{logicId,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{applyFactory,jdbcType=VARCHAR}, #{leaveFactoryNo,jdbcType=VARCHAR}, 
      #{leaveFactoryDate,jdbcType=DATE}, #{installDate,jdbcType=DATE}, #{position,jdbcType=VARCHAR}, 
      #{availableYear,jdbcType=INTEGER}, #{etc,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, 
      #{ratedVoltage,jdbcType=VARCHAR}, #{ratedFrequency,jdbcType=VARCHAR}, #{ratedCurrent,jdbcType=VARCHAR}, 
      #{applyPhone,jdbcType=VARCHAR}, #{produceContrary,jdbcType=VARCHAR}, #{easyBrokenThing,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sjm.bean.DeviceDetail">
    insert into device_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceName != null">
        device_name,
      </if>
      <if test="logicId != null">
        logic_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="applyFactory != null">
        apply_factory,
      </if>
      <if test="leaveFactoryNo != null">
        leave_factory_no,
      </if>
      <if test="leaveFactoryDate != null">
        leave_factory_date,
      </if>
      <if test="installDate != null">
        install_date,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="availableYear != null">
        available_year,
      </if>
      <if test="etc != null">
        etc,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="ratedVoltage != null">
        rated_voltage,
      </if>
      <if test="ratedFrequency != null">
        rated_frequency,
      </if>
      <if test="ratedCurrent != null">
        rated_current,
      </if>
      <if test="applyPhone != null">
        apply_phone,
      </if>
      <if test="produceContrary != null">
        produce_contrary,
      </if>
      <if test="easyBrokenThing != null">
        easy_broken_thing,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deviceName != null">
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="logicId != null">
        #{logicId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="applyFactory != null">
        #{applyFactory,jdbcType=VARCHAR},
      </if>
      <if test="leaveFactoryNo != null">
        #{leaveFactoryNo,jdbcType=VARCHAR},
      </if>
      <if test="leaveFactoryDate != null">
        #{leaveFactoryDate,jdbcType=DATE},
      </if>
      <if test="installDate != null">
        #{installDate,jdbcType=DATE},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="availableYear != null">
        #{availableYear,jdbcType=INTEGER},
      </if>
      <if test="etc != null">
        #{etc,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ratedVoltage != null">
        #{ratedVoltage,jdbcType=VARCHAR},
      </if>
      <if test="ratedFrequency != null">
        #{ratedFrequency,jdbcType=VARCHAR},
      </if>
      <if test="ratedCurrent != null">
        #{ratedCurrent,jdbcType=VARCHAR},
      </if>
      <if test="applyPhone != null">
        #{applyPhone,jdbcType=VARCHAR},
      </if>
      <if test="produceContrary != null">
        #{produceContrary,jdbcType=VARCHAR},
      </if>
      <if test="easyBrokenThing != null">
        #{easyBrokenThing,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjm.bean.DeviceDetailExample" resultType="java.lang.Long">
    select count(*) from device_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <!-- selectByNameLogicId -->
  <select id="selectByNameLogicId" parameterType="java.util.ArrayList" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from device_detail
  	<where>
  		(device_name,logic_id) in
  		<foreach collection="list" item="item" open="(" close=")" separator=",">
  			(#{item.deviceName},#{item.logicId})
  		</foreach>
  	</where>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deviceName != null">
        device_name = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.logicId != null">
        logic_id = #{record.logicId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.applyFactory != null">
        apply_factory = #{record.applyFactory,jdbcType=VARCHAR},
      </if>
      <if test="record.leaveFactoryNo != null">
        leave_factory_no = #{record.leaveFactoryNo,jdbcType=VARCHAR},
      </if>
      <if test="record.leaveFactoryDate != null">
        leave_factory_date = #{record.leaveFactoryDate,jdbcType=DATE},
      </if>
      <if test="record.installDate != null">
        install_date = #{record.installDate,jdbcType=DATE},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.availableYear != null">
        available_year = #{record.availableYear,jdbcType=INTEGER},
      </if>
      <if test="record.etc != null">
        etc = #{record.etc,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ratedVoltage != null">
        rated_voltage = #{record.ratedVoltage,jdbcType=VARCHAR},
      </if>
      <if test="record.ratedFrequency != null">
        rated_frequency = #{record.ratedFrequency,jdbcType=VARCHAR},
      </if>
      <if test="record.ratedCurrent != null">
        rated_current = #{record.ratedCurrent,jdbcType=VARCHAR},
      </if>
      <if test="record.applyPhone != null">
        apply_phone = #{record.applyPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.produceContrary != null">
        produce_contrary = #{record.produceContrary,jdbcType=VARCHAR},
      </if>
      <if test="record.easyBrokenThing != null">
        easy_broken_thing = #{record.easyBrokenThing,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device_detail
    set id = #{record.id,jdbcType=INTEGER},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      logic_id = #{record.logicId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      apply_factory = #{record.applyFactory,jdbcType=VARCHAR},
      leave_factory_no = #{record.leaveFactoryNo,jdbcType=VARCHAR},
      leave_factory_date = #{record.leaveFactoryDate,jdbcType=DATE},
      install_date = #{record.installDate,jdbcType=DATE},
      position = #{record.position,jdbcType=VARCHAR},
      available_year = #{record.availableYear,jdbcType=INTEGER},
      etc = #{record.etc,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      rated_voltage = #{record.ratedVoltage,jdbcType=VARCHAR},
      rated_frequency = #{record.ratedFrequency,jdbcType=VARCHAR},
      rated_current = #{record.ratedCurrent,jdbcType=VARCHAR},
      apply_phone = #{record.applyPhone,jdbcType=VARCHAR},
      produce_contrary = #{record.produceContrary,jdbcType=VARCHAR},
      easy_broken_thing = #{record.easyBrokenThing,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjm.bean.DeviceDetail">
    update device_detail
    <set>
      <if test="deviceName != null">
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="logicId != null">
        logic_id = #{logicId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="applyFactory != null">
        apply_factory = #{applyFactory,jdbcType=VARCHAR},
      </if>
      <if test="leaveFactoryNo != null">
        leave_factory_no = #{leaveFactoryNo,jdbcType=VARCHAR},
      </if>
      <if test="leaveFactoryDate != null">
        leave_factory_date = #{leaveFactoryDate,jdbcType=DATE},
      </if>
      <if test="installDate != null">
        install_date = #{installDate,jdbcType=DATE},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="availableYear != null">
        available_year = #{availableYear,jdbcType=INTEGER},
      </if>
      <if test="etc != null">
        etc = #{etc,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ratedVoltage != null">
        rated_voltage = #{ratedVoltage,jdbcType=VARCHAR},
      </if>
      <if test="ratedFrequency != null">
        rated_frequency = #{ratedFrequency,jdbcType=VARCHAR},
      </if>
      <if test="ratedCurrent != null">
        rated_current = #{ratedCurrent,jdbcType=VARCHAR},
      </if>
      <if test="applyPhone != null">
        apply_phone = #{applyPhone,jdbcType=VARCHAR},
      </if>
      <if test="produceContrary != null">
        produce_contrary = #{produceContrary,jdbcType=VARCHAR},
      </if>
      <if test="easyBrokenThing != null">
        easy_broken_thing = #{easyBrokenThing,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjm.bean.DeviceDetail">
    update device_detail
    set device_name = #{deviceName,jdbcType=VARCHAR},
      logic_id = #{logicId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      apply_factory = #{applyFactory,jdbcType=VARCHAR},
      leave_factory_no = #{leaveFactoryNo,jdbcType=VARCHAR},
      leave_factory_date = #{leaveFactoryDate,jdbcType=DATE},
      install_date = #{installDate,jdbcType=DATE},
      position = #{position,jdbcType=VARCHAR},
      available_year = #{availableYear,jdbcType=INTEGER},
      etc = #{etc,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      rated_voltage = #{ratedVoltage,jdbcType=VARCHAR},
      rated_frequency = #{ratedFrequency,jdbcType=VARCHAR},
      rated_current = #{ratedCurrent,jdbcType=VARCHAR},
      apply_phone = #{applyPhone,jdbcType=VARCHAR},
      produce_contrary = #{produceContrary,jdbcType=VARCHAR},
      easy_broken_thing = #{easyBrokenThing,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectDistinctDeviceNames" resultType="java.lang.String">
  	select distinct device_name 
  	from device_detail
  </select>
  
</mapper>