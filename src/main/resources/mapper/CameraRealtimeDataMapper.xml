<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjm.dao.CameraRealtimeDataMapper">
  <resultMap id="BaseResultMap" type="com.sjm.bean.CameraRealtimeData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="logic_id" jdbcType="INTEGER" property="logicId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="connect" jdbcType="VARCHAR" property="connect" />
    <result column="path" jdbcType="VARCHAR" property="path" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, logic_id, start_time, connect, path
  </sql>
  <select id="selectByExample" parameterType="com.sjm.bean.CameraRealtimeDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from camera_realtime_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from camera_realtime_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from camera_realtime_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjm.bean.CameraRealtimeDataExample">
    delete from camera_realtime_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjm.bean.CameraRealtimeData">
    insert into camera_realtime_data (id, logic_id, start_time, 
      connect, path)
    values (#{id,jdbcType=INTEGER}, #{logicId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{connect,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sjm.bean.CameraRealtimeData">
    insert into camera_realtime_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="logicId != null">
        logic_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="connect != null">
        connect,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="logicId != null">
        #{logicId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="connect != null">
        #{connect,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjm.bean.CameraRealtimeDataExample" resultType="java.lang.Long">
    select count(*) from camera_realtime_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update camera_realtime_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.logicId != null">
        logic_id = #{record.logicId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.connect != null">
        connect = #{record.connect,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update camera_realtime_data
    set id = #{record.id,jdbcType=INTEGER},
      logic_id = #{record.logicId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      connect = #{record.connect,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjm.bean.CameraRealtimeData">
    update camera_realtime_data
    <set>
      <if test="logicId != null">
        logic_id = #{logicId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="connect != null">
        connect = #{connect,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjm.bean.CameraRealtimeData">
    update camera_realtime_data
    set logic_id = #{logicId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      connect = #{connect,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>